name: Models CI/CD

# Trigger every time a push occurs
on:
  push:
  pull_request:
  workflow_dispatch:
    # paths:
    # - version.txt


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Install helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          rm -rf ./get_helm.sh
          helm

      - name: Get version
        id: get_version
        run: |
          echo "::set-output name=version::v$(grep ixia-c-helm-chart version.yaml | cut -d: -f2 |sed -e 's/ //g')"

      - name: Create helm packages
        run: |
          helm package ./src/ixia-c-controller/
          helm package ./src/ixia-c-traffic-engine/
          helm repo index ./ --url https://github.com/open-traffic-generator/ixia-c-helm/releases/download/${{ steps.get_version.outputs.version }}


      - name: Commit auto generated index.yaml
        id: commit_generated
        run: |
          git config user.name "Github Actions Bot"
          git config user.email "actions@github.com"
          git add --force index.yaml
          if git status --porcelain | grep .
            then
              git commit -m "Update auto generated index.yaml" 
              git push
            else
              echo "No changed auto generated index.yaml"
          fi

      - name: Check tag for current version
        uses: mukunku/tag-exists-action@v1.0.0
        id: check_tag
        with:
          tag: ${{ steps.get_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release and publish artifacts
        if: steps.check_tag.outputs.exists == 'false'
        uses: ncipollo/release-action@v1
        with:
          name: "Release ${{ steps.get_version.outputs.version }}"
          artifacts: ixia-c-controller-${{ steps.get_version.outputs.version }}.tgz,ixia-c-traffic-engine-${{ steps.get_version.outputs.version }}.tgz
          tag: ${{ steps.get_version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}