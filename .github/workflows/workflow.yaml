name: ixia-c-helm CI/CD

# Trigger every time a push occurs
on:
  push:
  pull_request:
  # workflow_dispatch:
  #   paths:
  #   - version.yaml


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Install helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          rm -rf ./get_helm.sh
          helm

      - name: Get version
        id: get_version
        run: |
          echo "::set-output name=version::$(grep ixia-c-helm-chart version.yaml | cut -d: -f2 |sed -e 's/ //g')"

      - name: Get ixia-c-controller version
        id: get_controller_version
        run: |
          echo "::set-output name=version::$(grep ixia-c-controller version.yaml | cut -d: -f2 |sed -e 's/ //g')"

      - name: Get ixia-c-traffic-engine version
        id: get_traffic_engine_version
        run: |
          echo "::set-output name=version::$(grep ixia-c-traffic-engine version.yaml | cut -d: -f2 |sed -e 's/ //g')"

      - name: Update ixia-c-controller Chart & values yaml
        run: |
          sed -i "s/^version.*/version\:\ ${{ steps.get_version.outputs.version }}/g" ./src/ixia-c-controller/Chart.yaml
          sed -i "s/^appVersion.*/appVersion\:\ ${{ steps.get_controller_version.outputs.version }}/g" ./src/ixia-c-controller/Chart.yaml
          sed -i "s/^\s*tag.*/    tag\:\ ${{ steps.get_controller_version.outputs.version }}/g" ./src/ixia-c-controller/values.yaml
          cat ./src/ixia-c-controller/values.yaml

      - name: Update ixia-c-traffic-engine Chart & values yaml
        run: |
          sed -i "s/^version.*/version\:\ ${{ steps.get_version.outputs.version }}/g" ./src/ixia-c-traffic-engine/Chart.yaml
          sed -i "s/^appVersion.*/appVersion\:\ ${{ steps.get_traffic_engine_version.outputs.version }}/g" ./src/ixia-c-traffic-engine/Chart.yaml
          sed -i "s/^\s*tag.*/   tag\:\ ${{ steps.get_traffic_engine_version.outputs.version }}/g" ./src/ixia-c-traffic-engine/values.yaml
          cat ./src/ixia-c-traffic-engine/values.yaml

      - name: Create helm packages
        run: |
          helm package ./src/ixia-c-controller/
          helm package ./src/ixia-c-traffic-engine/
          helm repo index ./ --url https://github.com/open-traffic-generator/ixia-c-helm/releases/download/v${{ steps.get_version.outputs.version }}


      - name: Commit auto generated/updated files
        id: commit_generated
        run: |
          git config user.name "Github Actions Bot"
          git config user.email "actions@github.com"
          git add --force index.yaml
          git add --force ./src/ixia-c-controller/Chart.yaml
          git add --force ./src/ixia-c-controller/values.yaml
          git add --force ./src/ixia-c-traffic-engine/Chart.yaml
          git add --force ./src/ixia-c-traffic-engine/values.yaml
          if git status --porcelain | grep .
            then
              git commit -m "Update auto generated files" 
              git push
            else
              echo "No changed auto generated files"
          fi

      - name: Check tag for current version
        uses: mukunku/tag-exists-action@v1.0.0
        id: check_tag
        with:
          tag: v${{ steps.get_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release and publish artifacts
        if: steps.check_tag.outputs.exists == 'false'
        uses: ncipollo/release-action@v1
        with:
          name: "Release v${{ steps.get_version.outputs.version }}"
          artifacts: ixia-c-*.tgz, index.yaml
          tag: v${{ steps.get_version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}