apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    {{- include "te.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  {{- end }}
  selector:
    matchLabels:
      {{- include "te.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "te.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      hostNetwork: true
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.te.repository }}:{{ .Values.te.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.te.pullPolicy }}
          ports:
            - containerPort: {{.Values.service.port}}
          livenessProbe:
            tcpSocket: 
              port: {{.Values.service.port}}
            initialDelaySeconds: 10
            periodSeconds: 1
          readinessProbe:
            tcpSocket:
              port: {{.Values.service.port}}
            initialDelaySeconds: 10
            periodSeconds: 20
          resources:
            {{- toYaml .Values.te.resources | nindent 12 }}
          env:
            - name: OPT_LISTEN_PORT
              value: "{{- .Values.service.port }}"
            - name: ARG_IFACE_LIST
              value: "virtual@af_packet,{{.Values.egressDevice}}"
            - name: OPT_NO_HUGEPAGES
              value: "{{ .Values.optNoHugepages }}"
            - name: OPT_NO_RX 
              value: "{{ .Values.optNoRx }}" 
      initContainers:
        - name: "{{ .Values.egressInitJob.name }}"
          stdin: true
          tty: true
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.egressInitJob.repository }}"
          imagePullPolicy: {{ .Values.egressInitJob.pullPolicy }}
          resources:
            {{- toYaml .Values.te.resources | nindent 12 }}
          command: ["/bin/sh", "-c"]
          args:
            - interface={{- .Values.egressDevice }};
              for i in $(seq 1 5); do 
                result=`ip link show $interface | grep UP | wc -l`; 
                if [[ $result -eq 1 ]]; then 
                  break; 
                fi; 
                ip link set $interface up;
                sleep 0.5; 
              done;       
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      